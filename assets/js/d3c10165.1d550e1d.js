"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6754],{93902:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"deployment/tasks/tomcat","title":"Deployment Task - Apache Tomcat","description":"Specific configuration of Apache Tomcat for individual requirements is outside of the scope of this documentation however the following is a suggested (working) configuration process for a default install of Tomcat 9.0:","source":"@site/docs/deployment/tasks/tomcat.md","sourceDirName":"deployment/tasks","slug":"/deployment/tasks/tomcat","permalink":"/docs/deployment/tasks/tomcat","draft":false,"unlisted":false,"editUrl":"https://github.com/webprofusion/certify-docs/edit/master/docs/deployment/tasks/tomcat.md","tags":[],"version":"current","frontMatter":{"id":"tomcat","title":"Deployment Task - Apache Tomcat"}}');var a=o(74848),s=o(28453);const c={id:"tomcat",title:"Deployment Task - Apache Tomcat"},r=void 0,i={},d=[{value:"Enable SSL on your Tomcat connector",id:"enable-ssl-on-your-tomcat-connector",level:2},{value:"Add a &#39;Deploy to Tomcat&#39; Deployment Task",id:"add-a-deploy-to-tomcat-deployment-task",level:2},{value:"Add a &#39;Stop, Start or Restart a Service..&#39; Deployment Task",id:"add-a-stop-start-or-restart-a-service-deployment-task",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Specific configuration of Apache Tomcat for individual requirements is outside of the scope of this documentation however the following is a suggested (working) configuration process for a default install of Tomcat 9.0:"}),"\n",(0,a.jsx)(t.h2,{id:"enable-ssl-on-your-tomcat-connector",children:"Enable SSL on your Tomcat connector"}),"\n",(0,a.jsxs)(t.p,{children:["Edit ",(0,a.jsx)(t.code,{children:"conf/server.xml"}),", locate the connector with ",(0,a.jsx)(t.code,{children:"SSLHostConfig"}),", uncomment and edit as required. See also ",(0,a.jsx)(t.a,{href:"https://tomcat.apache.org/tomcat-9.0-doc/ssl-howto.html#Edit_the_Tomcat_Configuration_File",children:"https://tomcat.apache.org/tomcat-9.0-doc/ssl-howto.html#Edit_the_Tomcat_Configuration_File"})]}),"\n",(0,a.jsx)(t.p,{children:"Example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'    <Connector port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol"\n               maxThreads="150" SSLEnabled="true">\n        <SSLHostConfig>\n            <Certificate\n               certificateKeystoreFile="conf/certs/test.pfx"\n               certificateKeystoreType="pkcs12"\n               certificateKeystorePassword=""\n               sslProtocol="TLS"\n               type="RSA" />\n        </SSLHostConfig>\n    </Connector>\n\n'})}),"\n",(0,a.jsx)(t.h2,{id:"add-a-deploy-to-tomcat-deployment-task",children:"Add a 'Deploy to Tomcat' Deployment Task"}),"\n",(0,a.jsxs)(t.p,{children:["In your Managed Certificate, under Tasks, add a new ",(0,a.jsx)(t.code,{children:"Deploy to Tomcat"})," deployment task, providing the destination path for your PFX file."]}),"\n",(0,a.jsx)(t.p,{children:"When the deployment task is next executed the certificate will be exported as a PFX file to this location."}),"\n",(0,a.jsx)(t.h2,{id:"add-a-stop-start-or-restart-a-service-deployment-task",children:"Add a 'Stop, Start or Restart a Service..' Deployment Task"}),"\n",(0,a.jsx)(t.p,{children:"Then, add a task to Restart the Apache Tomcat service."}),"\n",(0,a.jsx)(t.p,{children:"As certificate renewals happen as required (at any time), you may wish to set the Task Trigger to be Manual so that the service restart can happen either during a maintenance window or as a scheduled task."})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>c,x:()=>r});var n=o(96540);const a={},s=n.createContext(a);function c(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);